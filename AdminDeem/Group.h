#include "Account.h"

#include <QDate>

#ifndef GROUP_H
#define GROUP_H


struct Group {
    long id;
    int course;
    QString name;
    QString faculty;
    QDateTime date_create;
    long chat_id;
    int score;
    QList<long> users;

    QList<Account*> accounts;
};
#endif // GROUP_H

/*
 * Есть идеи переустройства архитектуры. Делаем класс departament хранящий список faculty хранящий список Group хранящий список аккаунтов
 * Создаем класс для полноценного построения класса департамента, сначала получаем списки аккаунтов, потом списки групп и распределяем аккаунты, после список факультетов и распределяем
 * в них группы и также делаем это с факультетами. Делаем сортировку в порядке по правилам.
 * Плюсы - нам не придется делать методы сортировки и организовывать данные внутри классов потому что это уже будет сделано. Минусы - данная идея усложняется особенностью того что не все
 * сервисы могут работать
 * */
